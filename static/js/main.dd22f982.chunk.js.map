{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","components/scroll/Scroll.jsx","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardArray","map","robot","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAaeA,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,yDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,aACpD,gCACE,+BAAKL,EAAL,OACA,kCAAKC,YCOEK,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAOC,GACnC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMf,OAAO,8BAAMH,KCCAI,EAZG,SAAC,GAAmC,EAAjCC,YAAkC,IAArBC,EAAoB,EAApBA,aAC9B,OACI,qBAAMX,UAAU,MAAhB,SACI,uBACIA,UAAU,6BACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,SAAzC,SACKH,EAAMI,YCuBJC,G,wDAzBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,4DAGDG,KAAKV,MAAMI,a,GAjBFQ,cCoDZC,E,kDA5Cb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAaRc,eAAiB,SAAAC,GACf,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRM,YAAa,IAJE,E,qDAQnB,WAAqB,IAAD,OAClBwB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAO7C,WACE,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV6B,EAAiBnC,EAAOoC,QAAO,SAAAjC,GACnC,OAAOA,EAAMV,KACV4C,cACAC,SAAShC,EAAY+B,kBAG1B,OAA0B,KAAlBrC,EAAOuC,OACZ,yCAEC,sBAAK3C,UAAU,KAAf,UACE,oBAAIA,UAAU,mBAAd,0BACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,e,GAnCZX,aCGHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dd22f982.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-lightest-blue navy dib pa3 ma3 grow bw2 shadow-2\">\n      <img src={`https://robohash.org/${id}?200/200`} alt=\"contacts\" />\n      <div>\n        <h3>{name} </h3>\n        <p> {email}</p>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import React from 'react';\nimport Card from '../card/Card';\n\nconst CardList = ({ robots }) => {\n  const cardArray = robots.map((robot, i) => {\n    return (\n        <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email} />\n    );\n  });\n  return <div>{cardArray}</div>;\n};\nexport default CardList;\n","import React from 'react'\n\nconst SearchBox = ({ searchfield, searchChange  }) => {\n    return (\n        <div  className='pa2'>\n            <input\n                className='pa3 ba bn bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    )\n}\nexport default SearchBox","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', height: '800px' }}>\n            {props.children}\n        </div>\n    )\n}\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1> Oh no. That was not good.</h1>\n\n        } else {\n           return this.props.children \n        }\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/card-list/CardList';\nimport { robots } from '../robots';\nimport SearchBox from '../components/search-box/SearchBox';\nimport Scroll from '../components/scroll/Scroll';\n\nimport '../App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name\n        .toLowerCase()\n        .includes(searchfield.toLowerCase());\n    });\n\n    return !robots.length === 0 ?\n       <h1>Loading</h1> :\n      (\n        <div className=\"tc\">\n          <h1 className=\"f1 lightest-blue\">ROBO FRIENDS</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n            <CardList robots={filteredRobots} /> \n            </ErrorBoundry>\n           \n          </Scroll>\n        </div>\n      );\n    }\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}